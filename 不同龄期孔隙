import openpyxl

path=r'C:\Users\Akiyama Mio\Desktop\5%机制砂孔隙率1-35d.xlsx'
way=r'C:\Users\Akiyama Mio\Desktop\1-28 5%\kx\\'
title='30-f'#['0-b','10-b','20-b','30-b','0-f','10-f','20-f','30-f']
te = openpyxl.load_workbook(path)
te.create_sheet(title)
ste = te[title]
#te = openpyxl.Workbook()
#ste=te.active
#ste.title='F-1'
file = '0.38-0d-30-饱水样.xlsx'


def reform():

    til = ['Time','0d','3d','7d','14d','28d']
    #设置需要的标题（可更改）

    ste.append(til)
    #添加至excel表中

    ad = way + file
    wb = openpyxl.load_workbook(ad)
    ws=wb['0.38_0d_30_孔径分布']
    #打开目标工作簿和工作表（可更改）

    time = []
    data1=[]
    for each_rows in ws.iter_rows(min_row=2, max_row=201, min_col=1, max_col=1):
        #提取第一列中2-201行数据（可更改）
        #print(each_rows[0].value)
        time.append(each_rows[0].value * 1000)
        #将数据放大1000倍后存储（可更改）

    for i in range(1, 201):
        #print(i)
        time1 = time[i - 1]
        ste.cell(i + 1, 1).value = time1
    # 将纵坐标数值导入表格第一列（可更改）

    for each1_rows in ws.iter_rows(min_row=2, max_row=201, min_col=2, max_col=2):
        # print(each_rows[0].value)
        #提取第二列中2-201行数据（可更改）
        data1.append(each1_rows[0].value )

    for i in range(1, 201):
        #print(i)
        data2 = data1[i - 1]
        ste.cell(i + 1, 2).value = data2
    #将0d初始数据导入表格第二列（可更改）

def final():
    symbal = [ '3d','7d','14d','28d']
    #所需数据的路径变量（可更改）

    ass = str(way)
    #存储数据的总路径（可更改）

    k = 3

    #从第三列导入数据（可更改）

    reform()

    for j in symbal:
        asshole = ass + '0.38-'+j+'-30-ff-饱水样.xlsx'
        # print(asshole)0.38-1d-0-b-饱水样
        #建立完整文件路径，需正确拼凑路径名称（可更改）


        wb = openpyxl.load_workbook(asshole)
        asss= '0.38_'+j+'_30_ff_孔径分布'
        #工作表标题（可更改）0.38_0_42d_b_孔径分布
        ws = wb[asss]
        #打开目标文件工作簿及工作表

        time = []



        for each_rows in ws.iter_rows(min_row=2, max_row=201, min_col=2, max_col=2):
            # print(each_rows[0].value)
            #（可更改）
            time.append(each_rows[0].value)



        for i in range(1, 201):
                 #print(i)
            time1 = time[i-1]

            ste.cell(i + 1, k).value = time1
        k+=1

        #将全部所需文件数据整合（可更改）

    for m in range(1,20):
        ste.cell(202, m +1).value = '=sum(%s:%s)' % (ste.cell(2, m+1).coordinate, ste.cell(201, m+1).coordinate)
        #求孔隙率

    te.save(path)
    #保存文件名称（可更改）

#if __name__=='__main__':
  #final()

final()

